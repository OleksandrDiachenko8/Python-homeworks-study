# 1. Даны два целых числа A и B (при этом A≤B). Выведите все числа от A до B включительно.
A = int(input())
B = int(input())
for i in range(A, B + 1):
    print(i, end=" ")
print()

# 2. Даны два целых числа A и В. Выведите все числа от A до B включительно,
# в порядке возрастания,если A < B, или в порядке убывания в противном случае.
A = int(input())
B = int(input())
if A < B:
    B = B + 1
    n = 1
else:
    B = B - 1
    n = -1
for i in range(A, B, n):
    print(i, end=' ')
print()

# 3. Дано натуральное число n. 
# Напечатайте все n-значные нечетные натуральные числа в порядке убывания.
n = int(input())
for i in range(10 ** n - 1, 10 ** (n - 1) - 1, -2):
    print(i, end=' ')
print()

# 4. По данному натуральном n вычислите сумму 1²+2²+3²+...+n².
n = int(input())
sum = 0
for i in range(1, n + 1):
    sum += i ** 2
print(sum)

# 5. Дано несколько чисел. 
# Подсчитайте, сколько из них равны нулю, и выведите это количество.
# Cначала вводится число N, затем вводится ровно N целых чисел.
N = int(input())
i = 0
zeros = 0
while i < N:
    if int(input()) == 0:
        zeros += 1
    i += 1
print(zeros)

# 6. Напишите программу, которая по данному числу n от 1 до 9 выводит на экран n флагов.
# Изображение одного флага имеет размер 4×4 символов, 
# между двумя соседними флагами также имеется пустой (из пробелов) столбец. 
# Разрешается вывести пустой столбец после последнего флага. 
# Внутри каждого флага должен быть записан его номер — число от 1 до n.
# Вывод программы пример:
# +___ +___ +___ 
# |1 / |2 / |3 / 
# |__\ |__\ |__\ 
# |    |    |    
def draw_str2(n):
    res = ''
    for i in range(1, n + 1):
        res = res + '|' + str(i) + ' / '
    return res

n = int(input())
str1 = '+___ '
str3 = "|__\ "
str4 = '|    '
str2 = draw_str2(n)
print(str1 * n, str2, str3 * n, str4 * n, sep="\n")

# 7. По данному натуральному n≤9 выведите лесенку из n ступенек, 
# i-я ступенька состоит из чисел от 1 до i без пробелов.
n = int(input())
for j in range(1, n + 1):
    for i in range(1, j + 1):
        print(i, end='')
    print()

# 8. Найдите и выведите все двузначные числа, которые равны удвоенному произведению своих цифр.
for i in range(10, 100):
    if int(str(i)[0]) * int(str(i)[1]) * 2 == i:
        print(i)

# 9. Даны числа a, b, c, d, e. Подсчитайте количество таких целых чисел от 0 до 1000 (включительно),
# которые являются корнями уравнения (ax³+bx²+cx+d)/(x-e)=0, и выведите их количество.
a = int(input())
b = int(input())
c = int(input())
d = int(input())
e = int(input())
count = 0
for x in range(0, 1001):
    if x == e:
        continue
    res = (a * (x ** 3) + b * x * x + c * x + d) / (x - e)
    if res == 0:
        count += 1
print(count)

# 10. По данному натуральному n вычислите сумму 1!+2!+3!+...+n!. 
# В решении этой задачи можно использовать только один цикл.
def factorial(n):
    if n - 1 > 0:
        return(factorial(n - 1) * n)
    return n

n = int(input())
res = 0
for i in range(1, n + 1):
    res += factorial(i)
print(res)

# 11. Для настольной игры используются карточки с номерами от 1 до N.Одна карточка потерялась.
# Найдите ее, зная номера оставшихся карточек.
# Формат ввода
# Дано число N, далее N-1 номер оставшихся карточек (различные числа от 1 до N).
# Примечания
# массивами и аналогичными структурами данныхпользоваться нельзя.
N = int(input())
cards_sum_must = 0
cards_sum_real = 0
for i in range(1, N + 1):
    cards_sum_must += i
    if i == N:
        continue
    cards_sum_real += int(input())
print(cards_sum_must - cards_sum_real)

